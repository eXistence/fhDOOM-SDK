SET(SOURCES   
  Actor.cpp
  Actor.h
  AF.cpp
  AF.h
  AFEntity.cpp
  AFEntity.h
  ai/AAS.cpp
  ai/AAS.h
  ai/AAS_debug.cpp
  ai/AAS_local.h
  ai/AAS_pathing.cpp
  ai/AAS_routing.cpp
  ai/AI.cpp
  ai/AI.h
  ai/AI_events.cpp
  ai/AI_pathing.cpp
  ai/AI_Vagary.cpp
  anim/Anim.cpp
  anim/Anim.h
  anim/Anim_Blend.cpp
  anim/Anim_Import.cpp
  anim/Anim_Testmodel.cpp
  anim/Anim_Testmodel.h
  BrittleFracture.cpp
  BrittleFracture.h
  Camera.cpp
  Camera.h  
  #EndLevel.cpp
  #EndLevel.h
  Entity.cpp
  Entity.h
  Fx.cpp
  Fx.h
  Game.def
  Game.h
  GameEdit.cpp
  GameEdit.h
  #gamesys/Callbacks.cpp
  gamesys/Class.cpp
  gamesys/Class.h
  gamesys/DebugGraph.cpp
  gamesys/DebugGraph.h
  gamesys/Event.cpp
  gamesys/Event.h
  gamesys/NoGameTypeInfo.h
  gamesys/SaveGame.cpp
  gamesys/SaveGame.h
  gamesys/SysCmds.cpp
  gamesys/SysCmds.h
  gamesys/SysCvar.cpp
  gamesys/SysCvar.h
  #gamesys/TypeInfo.cpp    <= will be added later to the source list, because it can't be compiled with pch (because it redefines some keywords)
  gamesys/TypeInfo.h
  Game_local.cpp
  Game_local.h
  Game_network.cpp
  Grabber.cpp
  Grabber.h
  IK.cpp
  IK.h
  Item.cpp
  Item.h
  Light.cpp
  Light.h
  Misc.cpp
  Misc.h
  Moveable.cpp
  Moveable.h
  Mover.cpp
  Mover.h
  MultiplayerGame.cpp
  MultiplayerGame.h
  physics/Clip.cpp
  physics/Clip.h
  physics/Force.cpp
  physics/Force.h
  physics/Force_Constant.cpp
  physics/Force_Constant.h
  physics/Force_Drag.cpp
  physics/Force_Drag.h
  physics/Force_Field.cpp
  physics/Force_Field.h
  physics/Force_Grab.cpp
  physics/Force_Grab.h
  physics/Force_Spring.cpp
  physics/Force_Spring.h
  physics/Physics.cpp
  physics/Physics.h
  physics/Physics_Actor.cpp
  physics/Physics_Actor.h
  physics/Physics_AF.cpp
  physics/Physics_AF.h
  physics/Physics_Base.cpp
  physics/Physics_Base.h
  physics/Physics_Monster.cpp
  physics/Physics_Monster.h
  physics/Physics_Parametric.cpp
  physics/Physics_Parametric.h
  physics/Physics_Player.cpp
  physics/Physics_Player.h
  physics/Physics_RigidBody.cpp
  physics/Physics_RigidBody.h
  physics/Physics_Static.cpp
  physics/Physics_Static.h
  physics/Physics_StaticMulti.cpp
  physics/Physics_StaticMulti.h
  physics/Push.cpp
  physics/Push.h
  Player.cpp
  Player.h
  PlayerIcon.cpp
  PlayerIcon.h
  PlayerView.cpp
  PlayerView.h
  Projectile.cpp
  Projectile.h
  Pvs.cpp
  Pvs.h
  script/Script_Compiler.cpp
  script/Script_Compiler.h
  script/Script_Interpreter.cpp
  script/Script_Interpreter.h
  script/Script_Program.cpp
  script/Script_Program.h
  script/Script_Thread.cpp
  script/Script_Thread.h
  SecurityCamera.cpp
  SecurityCamera.h
  SmokeParticles.cpp
  SmokeParticles.h
  Sound.cpp
  Sound.h
  Target.cpp
  Target.h
  Trigger.cpp
  Trigger.h
  Weapon.cpp
  Weapon.h
  WorldSpawn.cpp
  WorldSpawn.h
  precompiled.h
  ../framework/BuildVersion.cpp
)

include_directories(${CMAKE_CURRENT_SOURCE_DIR})
add_force_include(precompiled.h SOURCES)
add_msvc_precompiled_header(precompiled.h SOURCES)

SET(SOURCES ${SOURCES} gamesys/TypeInfo.cpp) #TypeInfo must be compiled without pch, so it can redefine some keywords

source_group(game .*)  
source_group(game\\AI ai/.*)  
source_group(game\\Animation animation/.*)  
source_group(game\\GameSys gamesys/.*)  
source_group(game\\Physics physics/.*)  
source_group(game\\Script script/.*) 

set(TARGET_NAME "fhGame-roe-x86")
add_definitions(-D__DOOM__ -DGAME_DLL -D_D3XP)
add_library(${TARGET_NAME} SHARED ${SOURCES})
target_link_libraries(${TARGET_NAME} idlib)
set_property(TARGET ${TARGET_NAME} PROPERTY FOLDER dlls)  

IF(UNIX)
  IF(CMAKE_SIZEOF_VOID_P EQUAL 8)
    set_target_properties(${TARGET_NAME} PROPERTIES COMPILE_FLAGS "-m32" LINK_FLAGS "-m32")
  ENDIF()
ENDIF()  